{"version":3,"sources":["cat.js"],"names":["myData","retrun","show","document","getElementById","classList","toggle","wrapper","querySelector","carousel","firstCardWidth","offsetWidth","arrowBtns","querySelectorAll","carouselChildrens","children","isDragging","isAutoPlay","startX","startScrollLeft","timeoutId","cardPerView","Math","round","slice","reverse","forEach","card","insertAdjacentHTML","outerHTML","add","scrollLeft","remove","btn","addEventListener","id","dragStart","e","pageX","dragging","dragStop","infiniteScroll","scrollWidth","ceil","clearTimeout","matches","autoPlay","window","innerWidth","setTimeout"],"mappings":"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","sourcesContent":["function myData() {\r\n  retrun;\r\n}\r\n\r\nfunction show() {\r\n  document.getElementById('anotherFunction').classList.toggle('Active');\r\n}\r\n\r\nconst wrapper = document.querySelector(\".wrapper\");\r\nconst carousel = document.querySelector(\".carousel\");\r\nconst firstCardWidth = carousel.querySelector(\".card\").offsetWidth;\r\nconst arrowBtns = document.querySelectorAll(\".wrapper i\");\r\nconst carouselChildrens = [...carousel.children];\r\n\r\nlet isDragging = false, isAutoPlay = true, startX, startScrollLeft, timeoutId;\r\n\r\n// Get the number of cards that can fit in the carousel at once\r\nlet cardPerView = Math.round(carousel.offsetWidth / firstCardWidth);\r\n\r\n// Insert copies of the last few cards to beginning of carousel for infinite scrolling\r\ncarouselChildrens.slice(-cardPerView).reverse().forEach(card => {\r\n    carousel.insertAdjacentHTML(\"afterbegin\", card.outerHTML);\r\n});\r\n\r\n// Insert copies of the first few cards to end of carousel for infinite scrolling\r\ncarouselChildrens.slice(0, cardPerView).forEach(card => {\r\n    carousel.insertAdjacentHTML(\"beforeend\", card.outerHTML);\r\n});\r\n\r\n// Scroll the carousel at appropriate postition to hide first few duplicate cards on Firefox\r\ncarousel.classList.add(\"no-transition\");\r\ncarousel.scrollLeft = carousel.offsetWidth;\r\ncarousel.classList.remove(\"no-transition\");\r\n\r\n// Add event listeners for the arrow buttons to scroll the carousel left and right\r\narrowBtns.forEach(btn => {\r\n    btn.addEventListener(\"click\", () => {\r\n        carousel.scrollLeft += btn.id == \"left\" ? -firstCardWidth : firstCardWidth;\r\n    });\r\n});\r\n\r\nconst dragStart = (e) => {\r\n    isDragging = true;\r\n    carousel.classList.add(\"dragging\");\r\n    // Records the initial cursor and scroll position of the carousel\r\n    startX = e.pageX;\r\n    startScrollLeft = carousel.scrollLeft;\r\n}\r\n\r\nconst dragging = (e) => {\r\n    if(!isDragging) return; // if isDragging is false return from here\r\n    // Updates the scroll position of the carousel based on the cursor movement\r\n    carousel.scrollLeft = startScrollLeft - (e.pageX - startX);\r\n}\r\n\r\nconst dragStop = () => {\r\n    isDragging = false;\r\n    carousel.classList.remove(\"dragging\");\r\n}\r\n\r\nconst infiniteScroll = () => {\r\n    // If the carousel is at the beginning, scroll to the end\r\n    if(carousel.scrollLeft === 0) {\r\n        carousel.classList.add(\"no-transition\");\r\n        carousel.scrollLeft = carousel.scrollWidth - (2 * carousel.offsetWidth);\r\n        carousel.classList.remove(\"no-transition\");\r\n    }\r\n    // If the carousel is at the end, scroll to the beginning\r\n    else if(Math.ceil(carousel.scrollLeft) === carousel.scrollWidth - carousel.offsetWidth) {\r\n        carousel.classList.add(\"no-transition\");\r\n        carousel.scrollLeft = carousel.offsetWidth;\r\n        carousel.classList.remove(\"no-transition\");\r\n    }\r\n\r\n    // Clear existing timeout & start autoplay if mouse is not hovering over carousel\r\n    clearTimeout(timeoutId);\r\n    if(!wrapper.matches(\":hover\")) autoPlay();\r\n}\r\n\r\nconst autoPlay = () => {\r\n    if(window.innerWidth < 800 || !isAutoPlay) return; // Return if window is smaller than 800 or isAutoPlay is false\r\n    // Autoplay the carousel after every 2500 ms\r\n    timeoutId = setTimeout(() => carousel.scrollLeft += firstCardWidth, 2500);\r\n}\r\nautoPlay();\r\n\r\ncarousel.addEventListener(\"mousedown\", dragStart);\r\ncarousel.addEventListener(\"mousemove\", dragging);\r\ndocument.addEventListener(\"mouseup\", dragStop);\r\ncarousel.addEventListener(\"scroll\", infiniteScroll);\r\nwrapper.addEventListener(\"mouseenter\", () => clearTimeout(timeoutId));\r\nwrapper.addEventListener(\"mouseleave\", autoPlay);"],"file":"cat.dev.js"}